[
  
  {
    "title": "Fortigate",
    "url": "/posts/fortigate/",
    "categories": "Writing",
    "tags": "Documentation",
    "date": "2024-02-19 17:12:22 +0545",
    





    
    "snippet": "Table of ContentsTable of Contents  ACKNOWLEDGEMENT  ABSTRACT  INTRODUCTION TO FORTIGATE  OBJECTIVES  SCOPE OF FORTIGATE  IMPORTANCE OF THE PROJECT  LIMITATIONS OF THE PROJECT  PROCEDURE  CONCLUSIO...",
    "content": "Table of ContentsTable of Contents  ACKNOWLEDGEMENT  ABSTRACT  INTRODUCTION TO FORTIGATE  OBJECTIVES  SCOPE OF FORTIGATE  IMPORTANCE OF THE PROJECT  LIMITATIONS OF THE PROJECT  PROCEDURE  CONCLUSION  SCREENSHOTSACKNOWLEDGEMENTI would like to express my heartfelt gratitude to all those who have contributed and supported me during the completion of this project titled “fortigate” at Texas College of Management and IT.I am deeply indebted to my project guide [Manish Shakya] for their constant guidance, valuable insights, and unwavering support throughout this journey. Their expertise and encouragement have been instrumental in shaping the direction of this project.I extend my sincere appreciation to the faculty members of the [IT department] for their valuable feedback and suggestions, which have been pivotal in improving the quality of this report.My heartfelt thanks go to my friends  for their encouragement, patience, and belief in my abilities, which provided me with the motivation to persevere and complete this project successfully.Lastly, I want to acknowledge the boundless support from all the individuals and resources whose efforts have contributed to the accomplishment of this project.Thank you all for being an essential part of this endeavor.Group 1 BCS 3rd semStudent  Texas College of Management and ITABSTRACTThe project report titled “fortigate” presents a comprehensive exploration of a novel security solution designed to fortify information retrieval and management. In an era where data breaches and cyber threats have become increasingly prevalent, safeguarding sensitive information is of paramount importance. “fortigate” is an innovative system that aims to enhance data security while facilitating efficient data retrieval within organizations.The project delves into the technical aspects of “Fortigate,” elucidating its architecture, design principles, and implementation details. The system’s intuitive user interface allows authorized personnel to retrieve data seamlessly while ensuring unauthorized access is thwarted. The report also sheds light on the performance evaluation of “Fortigate,” demonstrating its efficiency and effectiveness in real-world scenarios.INTRODUCTION TO FORTIGATEThe introduction provides a brief overview of the project “Fortigate - A Secure and Efficient Data Retrieval and Management System.” It highlights the importance of data security and efficient data retrieval in the modern digital landscape. The introduction outlines the objectives of the project, which include enhancing data security, streamlining data retrieval, ensuring cross-platform compatibility, and allowing for scalability and future enhancements. It also introduces the methodology that will be followed to achieve the project’s objectives, covering requirements analysis, literature review, system design, implementation, testing, and performance evaluation. The introduction concludes by emphasizing the significance of Fortigate in addressing data security challenges and empowering organizations to secure their valuable information effectively.This project aims to provide a comprehensive understanding of FortiGate, a robust network security platform developed by Fortinet. FortiGate is a widely adopted security solution utilized by organizations to protect their networks from cyber threats, secure data, and ensure network performance and availability.OBJECTIVESObjective 1: Enhancing Data SecurityThe primary objective of the Fortigate project is to enhance data security within organizations. This involves the implementation of robust encryption algorithms to protect data at rest and during transit. By ensuring the confidentiality and integrity of sensitive information, Fortigate aims to prevent unauthorized access and potential data breaches.Objective 2: Efficient Data RetrievalThe second objective is to facilitate efficient data retrieval for authorized personnel. Fortigate focuses on creating an intuitive user interface that allows seamless access to data while maintaining stringent access controls. By streamlining the retrieval process, Fortigate aims to improve productivity and user experience.Objective 3: Implementing Multi-factor AuthenticationTo reinforce data security, the project aims to incorporate multi-factor authentication (MFA) mechanisms. MFA adds an extra layer of protection by requiring users to provide multiple forms of identification before accessing the system. By implementing MFA, Fortigate aims to thwart unauthorized access attempts and enhance overall system security.Objective 4: Performance EvaluationThe project aims to evaluate the performance of the Fortigate in various real-world scenarios. This objective involves conducting rigorous testing and analysis to measure system efficiency, response times, and resource utilization. The results of the performance evaluation will be used to fine-tune and optimize the system.Objective 5: Future Enhancements and ScalabilityFinally, the report will address the objective of identifying potential areas for future enhancements and scalability. As technology and cybersecurity threats evolve, Fortigate must remain adaptable and capable of addressing new challenges. The project aims to explore avenues for expanding Fortigate’s capabilities and integrating additional features in the future.SCOPE OF FORTIGATEThe scope of Fortigate encompasses various aspects that define the boundaries and objectives of the project. It outlines the functionalities, target users, and potential applications of the Fortigate system. The following points highlight the scope of Fortigate:      Data Security Enhancement: Fortigate aims to significantly enhance data security within organizations by implementing robust encryption algorithms, access controls, and multi-factor authentication mechanisms. It focuses on safeguarding sensitive information from unauthorized access and potential data breaches.        Efficient Data Retrieval: The system targets the seamless and efficient retrieval of data for authorized personnel. Fortigate’s user-friendly interface and streamlined data retrieval process aim to improve productivity and user experience.        Multi-factor Authentication Integration: Fortigate incorporates multi-factor authentication (MFA) to bolster data security. By requiring users to provide multiple forms of identification, the system ensures a higher level of authentication, reducing the risk of unauthorized access.        Intuitive User Interface: The scope of Fortigate includes the development of an intuitive and user-friendly interface. This allows users to interact with the system easily, even with minimal technical expertise.        Scalability and Future Enhancements: Fortigate is designed to be scalable, enabling it to accommodate the evolving needs of organizations and future advancements in technology. The scope includes provisions for future enhancements and expansions to adapt to changing cybersecurity requirements.        Cross-Platform Compatibility: Fortigate aims to be compatible with various platforms, including desktop computers, laptops, and mobile devices. This ensures accessibility from a range of devices and operating systems.        Real-World Performance Evaluation: The scope includes conducting a thorough performance evaluation of the Fortigate in real-world scenarios. The evaluation assesses its efficiency, response times, and resource utilization under different usage conditions.  IMPORTANCE OF THE PROJECTThe importance of Fortigate lies in its ability to address critical challenges related to data security and data retrieval in organizations. This innovative system offers several significant benefits:Enhanced Data Security: Fortigate employs robust encryption algorithms and access controls to ensure the confidentiality and integrity of sensitive information. By safeguarding data at rest and during transmission, Fortigate helps organizations protect their valuable data assets from unauthorized access and potential cyber threats.      Prevention of Data Breaches: With its multi-factor authentication (MFA) mechanisms, Fortigate adds an extra layer of security, making it more difficult for unauthorized individuals to gain access to the system. This reduces the risk of data breaches, minimizing potential financial and reputational damages that organizations may face as a result of data leaks.        Efficient Data Retrieval: Fortigate streamlines the data retrieval process for authorized users. Its user-friendly interface and intuitive design enable seamless and quick access to relevant data, contributing to increased productivity and efficiency within the organization.        Compliance and Regulations: fortigate’s adherence to data security regulations and compliance standards ensures that organizations can meet legal and industry requirements. This compliance is crucial, especially for organizations that handle sensitive data subject to various privacy and security regulations.        Cross-Platform Compatibility: Fortigate’s compatibility with various platforms and devices enhances its accessibility and usability. Users can access the system from desktop computers, laptops, and mobile devices, ensuring that data retrieval and management can occur from different locations and devices.        Scalability and Future-Proofing: Fortigate’s scalable design allows it to adapt to changing organizational needs and technological advancements. As an organization grows or faces new challenges, Fortigate can be expanded and updated to meet emerging security threats and requirements.  LIMITATIONS OF THE PROJECTWhile Fortigate offers valuable benefits and features, it is essential to acknowledge its limitations to provide a comprehensive understanding of the project. The limitations of Fortigate include:      Initial Implementation Challenges: The initial implementation of Fortigate may pose challenges related to integration with existing data management systems and infrastructure within organizations. Ensuring smooth deployment and compatibility with diverse environments may require careful planning and coordination.        Resource Requirements: Fortigate’s advanced security features, such as encryption and multi-factor authentication, may require additional computational resources, leading to higher hardware and processing costs for organizations with limited budgets.        User Adoption and Training: The adoption of new security measures and data retrieval processes may necessitate user training and adaptation to new workflows. Resistance or difficulty in adopting the system could impact its effectiveness until users become accustomed to the changes.        Scalability Concerns: As the organization grows and data volumes increase, fortigate’s scalability may become a concern. Ensuring that the system can handle large-scale data retrieval and security requirements without compromising performance is essential.        Dependency on Internet Connectivity: Fortigate’s cloud-based or network-dependent architecture may introduce a reliance on stable internet connectivity. Temporary connectivity issues or downtime could disrupt data retrieval and system accessibility.        User Management Complexity: Managing user access and authentication mechanisms, especially in large organizations, can become complex. Proper user management and access control require careful administration to prevent security gaps or access conflicts.        Integration with Legacy Systems: Integrating Fortigate with legacy systems or applications that lack modern security standards may present challenges. Ensuring secure communication and compatibility with older technologies can be time-consuming and may require additional development efforts  PROCEDURE1. **Physical Setup:**      Connect the power adapter and turn on the device.        Connect a computer to one of FortiGate’s Ethernet ports for initial configuration.  2. **Network Configuration:**Configure the FortiGate’s network interfaces based on your network topology and requirements. Set IP addresses, subnet masks, and gateway information.Step 1: Accessing the FortiGate Web Interface      Connect a computer to the FortiGate using an Ethernet cable.        Open a web browser and enter the default IP address of the FortiGate (usually 192.168.1.99) in the address bar.        Log in with the administrator credentials. (username = admin &amp; password = “blank”)  Step 2: Interface Configuration      Go to “Network” to “Interfaces.”        Configure the interfaces based on your network topology:        Internal interfaces (LAN): Assign IP addresses and subnet masks to LAN interfaces connecting to internal networks.        External interfaces (WAN): Configure the WAN interface that connects to the internet or external network.        DMZ interfaces: If applicable, configure any demilitarized zone (DMZ) interfaces.  Step 3: IP Address Configuration      For the WAN interface, set the IP address provided by your ISP or configure it as per your network requirements. Choose between DHCP or static IP address based on your ISP’s settings.        For LAN interfaces, assign IP addresses and subnet masks to match your internal network addressing scheme.  Step 4: Default Gateway Configuration      Configure the default gateway on the FortiGate to point to the next-hop gateway provided by your ISP for the WAN interface.        For LAN interfaces, the default gateway is usually FortiGate’s own IP address on the corresponding interface.  Step 5: DNS Configuration  Set up DNS servers to resolve domain names. Go to “Network” to “DNS” and enter the IP addresses of your preferred DNS servers.Step 6: Static Routes (if needed)  If you have multiple subnets or need to direct traffic to specific destinations, configure static routes. Go to “Network” to “Static Routes” and define the destination subnet and gateway.Step 7: DHCP (if needed)  If you want the FortiGate to act as a DHCP server for your LAN, go to “Network” to “DHCP” and configure the DHCP server settings, including IP address range, lease time, and DNS servers to be provided to clients.Step 8: Firewall Policies (optional)  If you need to allow or block traffic between different interfaces or subnets, set up firewall policies. Go to “Policy &amp; Objects” to “IPv4 Policy” and create the necessary policies.Step 9: Apply Configuration  Review your settings and click “Apply” to save the changes.WAN Configuration:Configure the WAN interface to connect to your internet service provider (ISP). Set the appropriate IP settings, such as DHCP or static IP if provided by your ISP.Step 1: Accessing the FortiGate Web Interface      Connect a computer to the FortiGate using an Ethernet cable.        Open a web browser and enter the default IP address of the FortiGate (usually 192.168.1.99) in the address bar.        Log in with the administrator credentials.  Step 2: WAN Interface Configuration      Go to “Network” to “Interfaces.”        Locate the WAN interface and click on it to configure its settings.        Choose the “Static” or “DHCP” option, depending on how your ISP provides the WAN IP address:        Static IP: If your ISP provides a static public IP address, select “Static” and enter the IP address, subnet mask, default gateway, and DNS server addresses provided by your ISP.        DHCP: If your ISP uses DHCP to dynamically assign the WAN IP address, select “DHCP” for the WAN interface. The FortiGate will automatically obtain the IP address, subnet mask, default gateway, and DNS servers from the ISP.  Step 3: PPPoE Configuration (if needed)  If your ISP requires PPPoE (Point-to-Point Protocol over Ethernet) authentication, select “PPPoE” for the WAN interface and enter the PPPoE username and password provided by your ISP.Step 4: Additional WAN Settings (if needed)Depending on your network setup and ISP requirements, you may need to configure additional settings like MTU (Maximum Transmission Unit), VLAN (Virtual LAN), or link speed/duplex mode for the WAN interface. Consult your ISP or network administrator for specific requirements.Step 5: DNS ConfigurationSet up DNS servers to resolve domain names. Go to “Network” to “DNS” and enter the IP addresses of your preferred DNS servers.Step 6: Apply ConfigurationReview your settings and click “Apply” to save the changes.Firewall Policies:Set up firewall policies to control traffic between different network segments and the internet. Define rules for allowing or blocking specific services and applications.Step 1: Accessing the FortiGate Web InterfaceConnect a computer to the FortiGate using an Ethernet cable.Open a web browser and enter the default IP address of the FortiGate (usually 192.168.1.99) in the address bar.Log in with the administrator credentials.Step 2: Creating Firewall Policies      Go to “Policy &amp; Objects” to “IPv4 Policy.”        Click on “Create New” to add a new firewall policy.        Define the parameters for the firewall policy:        Source Interface: Select the interface where the traffic originates (e.g., LAN or WAN).        Source Address: Specify the source IP address or IP range for the traffic.        Destination Interface: Select the interface where the traffic is destined (e.g., LAN or WAN).        Destination Address: Specify the destination IP address or IP range for the traffic.        Schedule: Optionally, set a specific schedule for when the policy is active.        Service: Select the services or ports that the policy will allow or block.        Action: Choose “Accept” to allow the traffic or “Deny” to block it.        Logging: Enable logging to track traffic matching this policy.  VPN Setup:Configure Virtual Private Networks (VPNs) if needed for secure remote access or site-to-site connectivity. Define authentication methods and encryption settings.Step 1: Pre-configuration  Ensure that the FortiGate device has been set up with basic network configurations, including WAN and LAN interfaces.Step 2: VPN Wizard      Log in to the FortiGate web-based management interface using a web browser.        Navigate to “VPN” to “IPsec Wizard.”        Select “Site to Site” VPN and follow the wizard to configure the following parameters:        VPN Name: A descriptive name for the VPN.        Local Interface: Choose FortiGate’s outgoing interface (usually the WAN interface).        Local Subnet: Define the local network subnet to be connected via the VPN.        Remote Gateway: Enter the IP address or domain name of the remote VPN gateway.        Remote Subnet: Define the remote network subnet to be connected via the VPN.        Authentication Method: Choose a pre-shared key or certificate-based authentication.        Pre-shared Key: If using pre-shared key authentication, enter the shared secret.        Phase 1 Proposal: Define the encryption and authentication algorithms for phase 1 of the VPN tunnel.        Phase 2 Proposal: Define the encryption and authentication algorithms for phase 2 of the VPN tunnel.        Key Life Time: Set the key lifetime for phase 1 and phase 2.  Step 3: Firewall Policies  After creating the VPN tunnel, you may need to create firewall policies to allow traffic between the local and remote networks through the VPN tunnel. Go to “Policy &amp; Objects” to “IPv4 Policy” and create the necessary policies.Step 4: Testing : Test the VPN connectivity by sending traffic between the local and remote networks through the VPN tunnel.Security Profiles:Enable security profiles such as antivirus, intrusion prevention, and web filtering to protect against threats and malicious content.1. Antivirus:Scans incoming and outgoing traffic for known viruses and malware.Blocks infected files from entering the network and prevents malware from spreading.2. Intrusion Prevention System (IPS):Inspects network traffic for known and unknown threats, including exploits and vulnerabilities.Blocks malicious or suspicious activities in real-time.3. Web Filtering:Controls access to websites based on categories, URLs, or specific keywords.Helps prevent users from accessing malicious or inappropriate content.4. Application Control:Manages and controls the usage of specific applications and services on the network.Allows organizations to optimize bandwidth and enforce security policies.5. Data Loss Prevention (DLP):Monitors and controls data flow in and out of the network to prevent sensitive data leaks.Enforces policies to comply with data protection regulations.6. Advanced Threat Protection (ATP):Includes sandboxing and behavior-based analysis to detect and mitigate zero-day threats.Analyzes suspicious files and activities in a secure environment.7. SSL Inspection:Decrypts and inspects SSL/TLS encrypted traffic to detect hidden threats.Helps protect against threats that might be hidden in encrypted communications.8. Email Filtering (Anti-Spam):Filters incoming emails to block spam, phishing attempts, and malicious attachments.Helps maintain the security and integrity of email communications.9. DNS Filtering:Filters DNS queries to block access to malicious domains and prevent data exfiltration.Web Filtering and Application Control:Implement web filtering policies to restrict access to unwanted websites and create application control policies to manage application usage.Regular Updates and Maintenance:Keep the FortiGate firmware and security definitions up to date. Conduct periodic security assessments and update configurations based on changing requirements.Continuous Monitoring:Continuously monitor network traffic and security logs for potential threats or anomalies. Respond promptly to any security incidents.CONCLUSIONThe FortiGate project is a significant advancement in data security and efficiency. It addresses data protection challenges with encryption, access controls, and authentication. User-friendly interface enhances productivity. Consider initial challenges, resource needs, and user training. Regular maintenance and updates are crucial. FortiGate mitigates data breach risks, preserving reputation and trust. Continuous improvements ensure it remains effective in the evolving cybersecurity landscape. Overall, FortiGate is a reliable and valuable solution for secure data managementSCREENSHOTS."
  },
  
  {
    "title": "AWS",
    "url": "/posts/AWS/",
    "categories": "Writing",
    "tags": "Documentation",
    "date": "2024-02-19 17:12:22 +0545",
    





    
    "snippet": "AWS lab by Gauranga GautamLab1Task 1: Explore Users and Groups  Users:      user-1, user-2, user-3 created.        No permissions assigned.  Groups:  EC2-Admin, EC2-Support, S3-Support created.Grou...",
    "content": "AWS lab by Gauranga GautamLab1Task 1: Explore Users and Groups  Users:      user-1, user-2, user-3 created.        No permissions assigned.  Groups:  EC2-Admin, EC2-Support, S3-Support created.Group Permissions:      EC2-Support: AmazonEC2ReadOnlyAccess policy.        S3-Support: AmazonS3ReadOnlyAccess policy.        EC2-Admin: Inline policy for EC2 Describe, Start, Stop.  Task 2: Add Users to GroupsAdd user-1 to S3-Support:  Users &gt; S3-Support &gt; Users tab &gt; Add user-1.Add user-2 to EC2-Support:  Users &gt; EC2-Support &gt; Users tab &gt; Add user-2.Add user-3 to EC2-Admin:  Users &gt; EC2-Admin &gt; Users tab &gt; Add user-3.Task 3: Sign-In and Test UsersTest user-1 (S3-Support):Sign in with IAM user-1.S3 access granted, EC2 access denied.Test user-2 (EC2-Support):Sign out user-1.Sign in with IAM user-2.EC2 read-only access, no S3 access.Test user-3 (EC2-Admin):Sign out user-2.Sign in with IAM user-3.EC2 start/stop permissions, no S3 access.Lab 2Task 1: Create Your VPC      Open VPC console.        Create VPC:                  Name: lab                    IPv4 CIDR: 10.0.0.0/16                    1 Availability Zone                    1 public subnet (10.0.0.0/24)                    1 private subnet (10.0.1.0/24)                    NAT Gateway in 1 AZ.                    No VPC endpoints.                    Enable DNS hostnames and resolution.                  Confirm settings in the Preview panel.        Create VPC.  Task 2: Create Additional Subnets      Open Subnets.        Create second public subnet:                  Name: lab-subnet-public2                    Availability Zone: us-east-1b                    IPv4 CIDR: 10.0.2.0/24                  Create second private subnet:                  Name: lab-subnet-private2                    Availability Zone: us-east-1b                    IPv4 CIDR: 10.0.3.0/24                  Associate route table with new private subnet.        Associate route table with new public subnet.  Task 3: Create a VPC Security Group      Open Security Groups.        Create security group:                  Name: Web Security Group                    Description: Enable HTTP access                    VPC: lab-vpc                  Add inbound rule: HTTP from Anywhere-IPv4.  Task 4: Launch a Web Server Instance      Open EC2 console.        Launch instance with:                  Name: Web Server 1                    Amazon Linux 2023 AMI                    t2.micro instance type                    Key pair: vockey            Network: lab-vpc, Subnet: lab-subnet-public2, Auto-assign public                  IP enabled                            Security group: Web Security Group            User data script for Apache and PHP installation.            Wait for the instance to pass status checks.        Copy Public IPv4 DNS.        Open browser, paste DNS, view AWS logo and metadata page.  Lab 3Task 1: Launch Your Amazon EC2 Instance      Open EC2 console.        Launch instance:                  Name: Web Server                    Amazon Linux 2023 AMI                    t2.micro instance type                    Key pair: vockey                    Network: Lab VPC, Subnet: default, Auto-assign public IP enabled                    Security group: Create \"Web Server security group\"                    User data script for Apache installation.                    Termination protection enabled.                  **Wait for instance to display \"Running\" with \"2/2 checks          passed.\"**      Task 2: Monitor Your Instance      Choose \"Status checks\" tab.        Check both System reachability and Instance reachability.        Choose \"Monitoring\" tab to view CloudWatch metrics.        View system log and instance screenshot for troubleshooting.  Task 3: Update Your Security Group and Access the Web Server      Copy Public IPv4 address.        Open Security Groups.        Edit \"Web Server security group\" inbound rules:    Add rule: Type HTTP, Source Anywhere-IPv4.  Refresh web browser, check if you can access the web server.Task 4: Resize Your Instance: Instance Type and EBS Volume      Stop the instance.        Change instance type to t2.small.        Modify EBS volume size to 10 GiB.        Start the resized instance.  Task 5: Explore EC2 Limits      Search for \"Service Quotas\" in the AWS Management Console.    Choose \"Amazon Elastic Compute Cloud (Amazon EC2)\" under AWS          services.        Observe and explore the default limits for running instances.Task 6: Test Termination Protection      Open EC2 console.        Choose Instances.        Select \"Web Server\" instance.        Attempt to terminate, observe termination protection message.        Disable termination protection in \"Instance settings.\"        Terminate the instance.  Lab 4Task 1: Create a New EBS Volume      Open EC2 console.        Navigate to Instances.    **Note the Availability Zone of the existing instance (e.g.,          us-east-1a).**            Go to Volumes.        Create a new volume:                  Volume Type: General Purpose SSD (gp2)                    Size (GiB): 1                    Availability Zone: Select the same as the instance                    Add Tag: Key: Name, Value: My Volume                    Create Volume            Task 2: Attach the Volume to an Instance      Select \"My Volume.\"        In Actions, choose Attach volume.        Choose the Lab instance, Device: /dev/sdf.        Attach volume.  Task 3: Connect to Your Amazon EC2 Instance      macOS and Linux Users        Download labsuser.pem.        Open terminal, navigate to the directory.                  cd ~/Documents                    chmod 400 labsuser.pem                  Copy the Public IPv4 address.        In terminal:          ssh -i labsuser.pem ec2-user@&lt;public-ip&gt;      Task 4: Create and Configure Your File System      View available storage:          df -h            Create ext3 file system:          sudo mkfs -t ext3 /dev/sdf            Create a directory for mounting:          sudo mkdir /mnt/data-store            Mount the new volume:          sudo mount /dev/sdf /mnt/data-store            Add to /etc/fstab:          **echo \"/dev/sdf /mnt/data-store ext3 defaults,noatime 1 2\" |                  sudo tee -a /etc/fstab**                          View configuration file:          cat /etc/fstab            View available storage again:          df -h            Create a file and add text:          sudo sh -c \"echo some text has been written &gt;                  /mnt/data-store/file.txt\"                          Verify the text has been written:          cat /mnt/data-store/file.txt      Task 5: Create an Amazon EBS Snapshot      In EC2 console, choose Volumes, select \"My Volume.\"        In Actions, choose Create snapshot.        Add tag: Key: Name, Value: My Snapshot.        Create snapshot.  Task 6: Restore the Amazon EBS Snapshot  Create a Volume Using Your Snapshot      In EC2 console, select \"My Snapshot.\"        In Actions, choose Create volume from snapshot.        For Availability Zone, select the same as before.        Add tag: Key: Name, Value: Restored Volume.        Create volume.    Attach the Restored Volume to Your EC2 Instance      In Volumes, select \"Restored Volume.\"        In Actions, choose Attach volume.        Choose the Lab instance, Device: /dev/sdg.        Attach volume.        Mount the Restored Volume        Create a directory for mounting:          sudo mkdir /mnt/data-store2            Mount the restored volume:          sudo mount /dev/sdg /mnt/data-store2            Verify the volume has the file:          ls /mnt/data-store2/      Lab 5Task 1: Create a Security Group for the RDS DB Instance      Go to the VPC service in the AWS Management Console.        In the left navigation pane, select \"Security Groups.\"        Choose \"Create security group\" and configure:                  Security group name: DB Security Group                    Description: Permit access from Web Security Group                    VPC: Lab VPC                  Add inbound rule:                  Type: MySQL/Aurora (3306)                    Source: Type \"sg\" and select Web Security Group.                  Choose \"Create security group.\"  Task 2: Create a DB Subnet Group      Go to the RDS service in the AWS Management Console.        In the left navigation pane, select \"Subnet groups.\"        Choose \"Create DB Subnet Group\" and configure:                  Name: DB-Subnet-Group                    Description: DB Subnet Group                    VPC: Lab VPC                    Add subnets for us-east-1a and us-east-1b with CIDR ranges                  10.0.1.0/24 and 10.0.3.0/24.                          Choose \"Create.\"  Task 3: Create an Amazon RDS DB Instance      In the RDS service, choose \"Databases.\"        Choose \"Create database\" and select MySQL under Engine Options.        Choose Dev/Test under Templates.        Choose Multi-AZ DB instance under Availability and durability.        Configure settings:                  DB instance identifier: lab-db                    Master username: main                    Master password: lab-password                    DB instance class: db.t3.micro                    Allocated storage: 20                    VPC: Lab VPC                    Security group: DB Security Group                    Initial database name: lab                    Uncheck backups, encryption, and enhanced monitoring.                  Choose \"Create database.\"        Wait for the database to be available, copy the Endpoint.  Task 4: Interact with Your Database      Obtain WebServer IP address from the Details dropdown.    **Open a new web browser tab, paste the WebServer IP address, and          press Enter.**            Navigate to the RDS link on the web application.        Configure the application:                  Endpoint: Paste the Endpoint copied earlier                    Database: lab                    Username: main                    Password: lab-password              Choose \"Submit.\"Lab 6Task 1: Create an AMI for Auto Scaling      Go to EC2 in the AWS Management Console.        In the left navigation pane, select \"Instances.\"    **Wait for Web Server 1 to show \"2/2 checks passed\" under Status          Checks.**            Select Web Server 1.    **In the \"Actions\" menu, choose \"Image and templates\" &gt;          \"Create image.\"**                      Image name: WebServerAMI                    Image description: Lab AMI for Web Server              Choose \"Create image.\"Task 2: Create a Load Balancer      Go to the AWS Management Console.        In the left navigation pane, select \"Target Groups.\"        Choose \"Create target group\":                  Target type: Instances                    Target group name: LabGroup                    VPC: Lab VPC                  Choose \"Create target group.\"        Go to \"Load Balancers\" in the left navigation pane.    **Choose \"Create load balancer\" and select \"Application Load          Balancer.\"**                      Load balancer name: LabELB                    VPC: Lab VPC                    Subnets: Public Subnet 1, Public Subnet 2                    Security groups: Web Security Group                    Listener HTTP:80, Default action: forward to LabGroup              Choose \"Create load balancer.\"Task 3: Create a Launch Template and an Auto Scaling Group      Go to \"Launch Templates\" in the left navigation pane.        Choose \"Create launch template\":                  Launch template name: LabConfig                    Auto Scaling guidance: Provide guidance                    AMI: Web Server AMI                    Instance type: t2.micro                    Key pair: vockey                    Security groups: Web Security Group                    Enable detailed CloudWatch monitoring                  Choose \"Create launch template.\"        In the success dialog, choose the LabConfig template.        From the \"Actions\" menu, choose \"Create Auto Scaling group\":                  Auto Scaling group name: Lab Auto Scaling Group                    Launch template: LabConfig                    VPC: Lab VPC                    Subnets: Private Subnet 1, Private Subnet 2                    Attach to an existing load balancer: LabGroup                    Enable group metrics collection within CloudWatch                    Desired capacity: 2, Minimum capacity: 2, Maximum capacity: 6            Scaling policy: Target tracking, Metric type: Average CPU                  Utilization, Target value: 60                    Tags: Key: Name, Value: Lab Instance      Choose \"Create Auto Scaling group.\"Task 4: Verify that Load Balancing is Working      Go to \"Instances\" in the left navigation pane.        Verify two new instances named Lab Instance.        Go to \"Target Groups\" and select LabGroup.    Choose the \"Targets\" tab and wait for both instances to become          healthy.            Go to \"Load Balancers,\" select LabELB, and copy the DNS name.    Open a new browser tab, paste the DNS name, and ensure the          application appears.      Task 5: Test Auto Scaling      Open CloudWatch from the AWS Management Console.        Choose \"All alarms\" in the left navigation pane.        Verify the two alarms created by Auto Scaling.    If alarms are not visible, go to EC2 &gt; Auto Scaling Groups &gt; Lab          Auto Scaling Group &gt; Automatic Scaling &gt; LabScalingPolicy &gt;Actions &gt; Edit, change Target Value to 50, and choose Update.            Choose the OK alarm (AlarmHigh) and wait for it to transition to OK.    Return to the web application and choose \"Load Test\" to generate          load.            Return to CloudWatch and wait for AlarmHigh to change to In alarm.    Verify additional instances were launched in EC2 &gt; Instances.Task 6: Terminate Web Server 1      Select Web Server 1.    In the \"Instance state\" menu, choose \"Instance State\" &gt;          \"Terminate Instance.\"        Choose \"Terminate.\""
  },
  
  {
    "title": "Active Directory Penetration Test Report",
    "url": "/posts/AD/",
    "categories": "Writing",
    "tags": "Report",
    "date": "2024-02-18 17:12:22 +0545",
    





    
    "snippet": "Date: February 14, 2024Table of Contents  Executive Summary  Introduction  Scope  Methodology  Findings          5.1 Windows Server 2016 Setup      5.2 Active Directory Configuration               ...",
    "content": "Date: February 14, 2024Table of Contents  Executive Summary  Introduction  Scope  Methodology  Findings          5.1 Windows Server 2016 Setup      5.2 Active Directory Configuration                  5.2.1: Implementing Active Directory Domain Services (AD DS)          5.2.2: Establish Domain Controller Role on the Server          5.2.3: Configure Active Directory Parameters          5.2.4: Validate Active Directory Configuration                    5.3 Attacks                  5.3.1 Brute Force Attack          5.3.2 Password Spraying Attack          5.3.3 Asreproast attack          5.3.4 SQL Injection Attack          5.3.5 Command Injection Attack                    5.4 BloodHound Analysis        Recommendations  Risk Assessment  Regulatory Compliance Considerations  Long-Term Security Considerations  Disclaimer  Acknowledgments  Conclusion1. Executive SummaryThe objective of the penetration test was to thoroughly assess the security of the Windows Server 2016 environment and Active Directory configuration, aiming to identify potential vulnerabilities exploitable by attackers. Various attack scenarios, including brute force attacks, password spraying attacks, ASREPRoast attacks, SQL injection attacks, and command injection attacks, were simulated to uncover critical weaknesses in the system.Upon examination of the Windows Server 2016 setup, default configurations and delayed application of crucial security patches were discovered, leaving the system vulnerable to known exploits. Additionally, weaknesses in the Active Directory configuration were noted, such as weak password policies, inadequate access controls, and insufficient segregation of duties, increasing the risk of unauthorized access.The findings highlight the urgent need for comprehensive remediation measures to strengthen the organization’s security posture. Recommendations include prioritizing regular patching and updates, enforcing robust password policies, reviewing and reinforcing least privilege access controls, implementing effective network segmentation, and conducting frequent security awareness training for employees.Implementing these recommendations will significantly improve the organization’s security posture, reducing the likelihood of cyber threats and protecting its assets, reputation, and stakeholder confidence.2. IntroductionThe goal of this penetration test was to evaluate Windows Server 2016 security in detail using an Active Directory environment that mimics a standard business infrastructure. Finding weaknesses and possible attack routes was the main goal in order to offer detailed suggestions for strengthening the security posture as a whole.In the digital and linked world of today, businesses mostly depend on technological infrastructure to run their operations effectively. For enterprises looking to create a reliable and scalable network infrastructure, Windows Server 2016 together with Active Directory is a popular option. To reduce possible risks, enterprises must constantly assess and improve the infrastructure’s security due to the growing sophistication of cyberattacks.Our objectives in doing this penetration test were to mimic actual attack scenarios and evaluate how resilient the Windows Server 2016 setup and Active Directory configuration were to different online threats. We sought to find flaws and vulnerabilities that may be used by bad actors to obtain unauthorized access, tamper with data integrity, or interfere with company operations using a combination of automated and human methods.The firm will be able to improve its overall security posture by prioritizing repair activities, implementing efficient security controls, and making well-informed decisions about security investments thanks to the data gathered from this penetration test. The company may strengthen its defenses against cyberattacks and preserve the confidence of its stakeholders, assets, and reputation by promptly resolving vulnerabilities that are found and putting the suggested security measures into place.In order to help the company mitigate risks and strengthen its security posture, we will offer comprehensive findings, analysis, and suggestions based on our evaluation throughout this report.3. ScopeThe scope of this penetration test included:  Setting up a Windows Server 2016 environment:          Creating and configuring a Windows Server 2016 environment with default settings to simulate a standard deployment scenario.        Configuring Active Directory to simulate a corporate network:          Configuring Active Directory (AD) services to replicate a corporate network environment, including organizational units, user accounts, group policies, and other AD objects.        Executing a minimum of five distinct attacks targeting the Windows Server environment:          Executing at least five different attack scenarios, covering common vectors such as Brute Force Attack, Password Spraying Attack, ASREPRoast Attack, SQL Injection Attack, Command Injection Attack.        Utilizing BloodHound for reconnaissance and privilege escalation:          Using BloodHound, a tool for analyzing Active Directory attack paths, to conduct reconnaissance and identify potential attack paths within the Active Directory environment, as well as to assess opportunities for privilege escalation.      4. MethodologyThe penetration test employed a blend of manual and automated techniques to simulate real-world attack scenarios. Manual techniques involve the use of human expertise to identify and exploit vulnerabilities in the system, while automated techniques leverage specialized tools and scripts to rapidly scan for and exploit known vulnerabilities.Various attack vectors were explored and exploited to evaluate the robustness of the system’s defenses. This included but was not limited to, network-based attacks such as port scanning, service enumeration, and exploitation of software vulnerabilities.5. Findings5.1 Windows Server 2016 SetupThe Windows Server 2016 environment was configured with default settings, including standard services and configurations. However, critical security patches and updates were not promptly applied, leaving the system susceptible to known vulnerabilities.Installation Process Overview:Prepare for Installation:  Download the Windows Server 2016 ISO from the Microsoft website or a licensed distributor.  Create a new virtual machine (VM) using VMware Workstation or similar software.  Attach the Windows Server 2016 ISO file to the VM’s virtual CD/DVD drive.      Adjust VM settings such as CPU cores, RAM, disk size, and network adapter settings.        Boot from Installation Media:          Power on the VM and ensure it boots from the Windows Server 2016 installation ISO.      Press any key to boot from CD or DVD when prompted.        Start Installation:          Select language, time, and keyboard input preferences.      Click “Install Now” to begin the installation process.        Enter Product Key:          Optionally enter a product key for Windows Server 2016.        Select Operating System Edition:                  Choose the desired edition of Windows Server 2016.                      Accept License Terms:          Read and accept the license terms.        Choose Installation Type:                  Select “Custom: Install Windows only (advanced)” for a clean installation.                      Select Installation Drive:          Choose the drive for installation and configure partitions if necessary.        Begin Installation:          Start the installation process.        Complete Installation:          Remove the installation media (ISO file) from the virtual CD/DVD drive.      Follow on-screen instructions to set up Windows Server 2016, create user accounts, and configure network settings.      Log in to the Windows Server 2016 desktop.        Install VMware Tools:                  Install VMware Tools for enhanced VM performance and additional features.                      Finalize Configuration:          Customize additional Windows Server 2016 settings as needed.      In summary, the Windows Server 2016 setup process involved downloading the ISO, creating a VM, installing the operating system, configuring settings, and finalizing the setup. However, it lacked timely application of critical security patches and updates, posing potential vulnerabilities to the system.  Critical security patches and updates were not promptly applied, leaving the system susceptible to known vulnerabilities.5.2 Active Directory Configuration      Active Directory was configured with default parameters, featuring weak password policies and inadequate access controls.    ### 5.2.1: Implementing Active Directory Domain Services (AD DS)          Launch Server Manager on the designated Windows Server 2016 machine.              Navigate to “Add roles and features” within Server Manager.                    Select “Role-based or feature-based installation” to align with best practices and proceed accordingly..      Select the appropriate server from the pool and initiate the installation process.              Choose “Active Directory Domain Services” from the list of server roles and add required features.                    Review the provided information about AD DS and commence the installation.            ### 5.2.2: Establish Domain Controller Role on the Server                  Upon completion of the installation, initiate the promotion of the server to a domain controller.                            Utilize the Active Directory Domain Services Configuration Wizard to specify whether to add a new forest or domain controller.                    Provide essential details such as the root domain name, forest, and domain functional levels.      Set a Directory Services Restore Mode (DSRM) password and review configuration options.      Execute the promotion process and allow the server to restart automatically.            ### 5.2.3: Configure Active Directory Parameters          Post-restart, access the system using the domain administrator account.              Utilize Server Manager to access “Active Directory Users and Computers.”                            Establish organizational units (OUs) to organize Active Directory objects effectively.                    Configure Group Policy Objects (GPOs) to enforce security settings and password policies.      Create requisite user accounts, groups, and computer accounts as per organizational requirements.      Configure DNS settings to ensure seamless name resolution within the domain.            ### 5.2.4: Validate Active Directory Configuration          Validate the Active Directory configuration by reviewing the organizational units, user accounts, groups, and computer accounts.              Ensure proper application of Group Policy Objects (GPOs) by executing “gpresult” or “rsop.msc” on client machines.                    Conduct comprehensive testing of user authentication, group membership, and other Active Directory functionalities to verify proper operation.      5.3 Attacks5.3.1 Brute Force Attack  To execute this attack, the CrackMapExec tool was utilized. CrackMapExec is a powerful penetration testing tool commonly used for scanning and exploitation tasks in Windows environments. It supports various protocols, including SMB, and allows for automated password guessing using wordlists.Command: sudo crackmapexec smb 192.168.85.3 -u ap -p /usr/share/wordlists/rockyou.txt  In this specific command:          sudo crackmapexec smb 192.168.85.3: Specifies the use of CrackMapExec to target the SMB protocol on the IP address 192.168.85.3. The SMB protocol is commonly used for file sharing in Windows environments.      u ap: Specifies the username “ap” for authentication. This is the username that will be used in the brute force attack.      p /usr/share/wordlists/rockyou.txt: Specifies the path to a wordlist file containing a list of commonly used passwords (rockyou.txt). CrackMapExec will attempt to authenticate with each password in the wordlist in order to gain access to the system.      The provided image depicts the output of the brute force attack conducted using CrackMapExec. It provides insight into the results of the attack, including any successful authentication attempts and the discovered credentials.5.3.2 Password Spraying Attack      This attack was carried out using the CrackMapExec program. A potent penetration testing tool called CrackMapExec is frequently used for Windows environment scanning and exploitation activities. It enables automated password guessing using wordlists and supports a number of protocols, including SMB.    Command: crackmapexec smb 192.168.85.3 -d [server.web](http://server.web/) -u username.txt -p Password@123 --continue-on-success          In this specific command:                  crackmapexec smb 192.168.85.3: Initiates CrackMapExec to target the SMB protocol on the specified IP address.          d server.web: Specifies the domain name for authentication.          u username.txt: Provides a file containing usernames for the attack.          p Password@123: Sets the password to be used during the attack.          -continue-on-success: Instructs the tool to continue the attack even after successful authentication attempts.                    The provided screenshot below illustrates the output of the password spraying attack using CrackMapExec, revealing insights into successful authentication attempts and discovered credentials.Instead of trying multiple passwords for a single username, try a single password across multiple usernames. This reduces the risk of account lockouts and increases the likelihood of success.5.3.3 Asreproast attack      The ASREPRoast attack utilizes tools such as GetNPUsers.py from the Impacket toolkit to request AS_REP messages containing encrypted ticket-granting service (TGS) tickets for vulnerable Active Directory user accounts. These messages are then captured and cracked offline using password-cracking tools like John the Ripper or Hashcat, revealing plaintext passwords. This attack leverages weaknesses in authentication mechanisms to compromise user accounts within the domain, demonstrating a significant security risk in Active Directory environments.    Command: python3 GetNPUser.py [server.web/](http://server.web/) -userfile ../../username.txt -format hashcat -outputfile hashes.asreproast          In this specific command:                  python3 GetNPUser.py: Executes the Python script GetNPUser.py for performing the attack.          server.web/: Specifies the target Active Directory domain for the attack.          userfile ../../username.txt: Specifies the path to a file containing a list of usernames to target within the domain.          format hashcat: Specifies the output format for the captured hashes, compatible with Hashcat for offline cracking.          outputfile hashes.asreproast: Specifies the output file name for storing the captured hashes in the ASREPRoast attack format.                    The ASREPRoast attack was successfully executed against the domain server.web. The Impacket toolkit was used with the GetNPUser.py script to retrieve AS-REP hashes for users within the domain.Cracking the HashesCommand: john -w=password_kerb.txt hashs.txt  In this specific command:          john: Refers to the John the Ripper password cracking tool.      w=password_kerb.txt: Specifies the wordlist file (password_kerb.txt) containing potential passwords.      hashs.txt: Represents the file containing hashed passwords obtained from the ASREPRoast attack.      The command aims to crack the hashes in hashs.txt using the passwords from password_kerb.txt.      The ASREPRoast attack proved effective against the server.web domain. By employing the Impacket toolkit and the GetNPUser.py script, AS-REP hashes for domain users were obtained. Following this, John the Ripper was employed to crack these hashes offline, with the intention of uncovering plaintext passwords linked to the hashed credentials.5.3.4 SQL Injection Attack  Initial Login Attempt:                  Attempted to login with standard credentials.                            Received an error message indicating a potential vulnerability.                      BurpSuite Capturing:          Captured the login request using BurpSuite.              Sent the request to the repeater for further analysis.                      Request Analysis:          Saved the captured request as a file named ‘sql’.              Analyzed the request in BurpSuite repeater.                      SQLMap Execution:          Executed SQLMap to exploit the SQL injection vulnerability.      Command Used: sqlmap -r sql --dbs --batch                  r sql: Specifies the file containing the captured request.          -dbs: Retrieves available databases.          -batch: Executes SQLMap in batch mode for automation.                              Database Enumeration:          SQLMap identified the website as vulnerable to SQL injection.      Retrieved available databases using the command.        Data Extraction:          Command Used: sqlmap -r sql --dbs -D gauranga --dump.                  D gauranga: Specifies the database to target.          -dump: Extracts data from the specified database.                              Credential Retrieval:          SQLMap successfully retrieved usernames and passwords from the ‘gauranga’ database.      Obtained admin credentials for further exploitation.        Admin Login:                  Successfully logged in using the obtained admin credentials.                            The SQL injection attack was successful in exploiting the vulnerability present in the login form. By leveraging SQLMap, sensitive data including usernames and passwords were extracted from the database, granting access as an admin user.5.3.5 Command Injection AttackAttack Execution:  Initial Ping Test:          Attempted to execute a ping command to test the command injection vulnerability.        Command Injection Attempt:          Injected the command &amp;whoami into the ping box.              Observed the response showing the current user’s authority as ‘system’.                      Netcat Setup:          Set up a listener using Netcat for receiving the reverse shell.      Command Used: nc -lnvp 9001.                  nc: Netcat command.          lnvp: Options for listening on a specific port (9001) and verbose mode.                      Reverse Shell Acquisition:          Searched for a suitable reverse shell payload on revshells.com.      Selected a reverse shell payload compatible with the target environment.        Payload Integration:                  Inserted the obtained reverse shell payload into the ping box.                            Executed the ping command with the injected payload.                      Command Execution:          As a result of the injected payload, gained command execution within the Windows Server system.      The command injection attack successfully exploited the vulnerability, allowing for arbitrary command execution. By injecting malicious commands into the ping box, an attacker gained access to the target system with system-level privileges, facilitating further malicious activities.5.4 BloodHound Analysis  Setup:          Installed Neo4j, a graph database management system, and created an account. Neo4j serves as the backend database for BloodHound, storing and analyzing data collected from the Active Directory environment.      Installed BloodHound on a Windows system. BloodHound is a powerful tool designed for Active Directory security assessment and reconnaissance, utilizing graph theory and database queries to analyze relationships and permissions within Active Directory.        Data Collection:          Utilized SharpHound, a data collection tool within BloodHound, to gather information from the Windows Active Directory environment. SharpHound collected data in JSON format.        ### Command for BloodHound Data Collection:     .\\SharpHound.exe -c All        Data Import:          Imported the collected data from the Windows Active Directory environment in JSON format into the Neo4j database. This step enabled BloodHound to analyze the data and generate visualizations for further analysis.        Analysis:          Leveraged BloodHound’s visualization and querying features to perform the following analyses:                              Map of Active Directory Environment: Visual representation showcasing relationships between users, groups, computers, and permissions within the Active Directory infrastructure.                                            Potential Attack Paths for User “ap”: Identified potential attack paths that user “ap” could exploit for lateral movement and privilege escalation within the Active Directory environment.                                            Map of All Users: Visualization depicting all users present in the Active Directory environment, along with their respective relationships and permissions, aiding in the identification of potential security vulnerabilities related to user accounts.                                          6. RecommendationsBased on the findings of our penetration testing of the Active Directory environment, the following recommendations are proposed to strengthen the security posture:  Implement Regular Patch Management: Establish a routine patch management process to ensure all servers and applications within the Active Directory environment are up-to-date with the latest security patches and updates.  Enhance Password Policies: Enforce stronger password policies, including the use of complex passwords, regular password changes, and multi-factor authentication (MFA) where applicable.  Implement Network Segmentation: Segment the network to isolate critical systems and sensitive data from potential attackers. Implement firewall rules and access controls to restrict unauthorized access between network segments.  Conduct Regular Security Training: Provide comprehensive security awareness training for employees to educate them about common security threats, phishing attacks, and best practices for safeguarding sensitive information.  Implement Security Monitoring: Deploy robust security monitoring tools to continuously monitor the Active Directory environment for suspicious activities, unauthorized access attempts, and potential security breaches.7. Risk AssessmentA comprehensive risk assessment was diligently executed to thoroughly evaluate the potential impact and likelihood of identified vulnerabilities within the Active Directory environment. Risks were meticulously categorized based on severity and meticulously prioritized for remediation, considering their potential impact on business operations and data security.8. Regulatory Compliance ConsiderationsAn assessment was conducted to ascertain compliance of the Active Directory system with key regulations, including the General Data Protection Regulation (GDPR) for protecting personal data within the EU, the Health Insurance Portability and Accountability Act (HIPAA) for safeguarding health information in the US, and the Payment Card Industry Data Security Standard (PCI DSS) for securing credit card data. Subsequent recommendations were provided to ensure alignment with these regulations and to maintain the confidentiality and security of data.9. Long-Term Security ConsiderationsTo ensure ongoing security in the Active Directory environment, it’s important to plan for long-term improvements. This could involve identifying key security objectives, establishing regular security assessments, implementing continuous monitoring measures, and providing ongoing security training for staff. By taking a proactive approach to long-term security, the organization can better protect its IT infrastructure against evolving threats.10. DisclaimerThis penetration test report is provided solely for informational purposes. The findings and recommendations contained within should be carefully evaluated and implemented by qualified security professionals in accordance with organizational policies and best practices. It is important to note that the testing and setup were conducted on an isolated environment within the researcher’s own computer system. Therefore, the outcomes and effectiveness of any security measures may differ in a real-world organizational setting. Additionally, while every effort has been made to ensure the accuracy of the findings, no guarantees are made regarding the completeness or timeliness of the information presented.11. AcknowledgmentsI extend my sincere appreciation to the organizations and individuals who provided guidance, resources, and support during the preparation and execution of this penetration testing project. Special thanks to Eminence Ways Pvt. Ltd, whose assistance and cooperation were invaluable in facilitating the successful completion of this project.12. ConclusionIn conclusion, the penetration testing revealed vulnerabilities within the Active Directory environment. Addressing these vulnerabilities and implementing recommended security measures is crucial for enhancing overall security. The cooperation of the organization’s IT team was invaluable throughout the testing process. It is recommended that immediate action be taken to mitigate risks and strengthen cybersecurity resilience.Signed,Gauranga Gautam"
  }
  
]

